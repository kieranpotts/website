/**
 * @file      Part of the Nirvarnia web application framework.
 * @see       {@link https://nirvarnia.com/|Nirvarnia}
 * @copyright 2020+ Kieran Potts Consultancy Ltd.
 * @license   Blue Oak Model License v1.0.0
 */

/**
 * Baseline styles for typographic elements.
 */

/* Apply the default typeface globally, ensuring it's inherited by everything in
the document - including <textarea> and <legend> elements which traditionally do
not inherit their font. */

body {
  font-family: var(--reset-default-font-family);
  font-weight: var(--reset-default-font-weight-normal);

  & * {
    font-family: inherit;
    font-weight: inherit;
  }
}

/* Set the elements that are to be rendered bold by default. */

:--bold {
  font-weight: var(--reset-default-font-weight-bold);
}

/* The monospace font is used for preformatted text and program code, etc. */

:--monospace {
  font-family: var(--reset-monospace-font-family);
  font-weight: var(--reset-monospace-font-weight-normal);

  & b,
  & strong {
    font-weight: var(--reset-monospace-font-weight-bold);
  }
}

/* Remove italics from <var>, for consistency with <code>, <kbd> and <samp>. */

var {
  font-style: normal;
}

/* Set the elements that are to be italicized by default. */

:--italic {
  font-style: italic;
}

/* Change the root's font size from 16px to 10px. This is convenient. It is easy
to calculate rem units if the division is by ten: 24px is 2.4rem: 24 / 10 = 2.4.
Inheritance needs to be reinforced for nested lists. */

html {
  font-size: var(--reset-root-font-size);

  & * {
    font-size: 100%;
  }
}

ul ul,
ol ol,
ul ol,
ol ul {
  font-size: 100%;
}

/* The default font size is set on the <body> element. Using ems, not rems, here
will resolve an old Chrome bug: http://stackoverflow.com/a/20206725. */

body {
  font-size: var(--reset-body-font-size);
}

/* Where font sizes of block-level elements differ from the default font size as
set deteremined by the <body> element, the font-size value should be relative to
the root element (i.e. defined in root em units). */

:--monospace-block {
  display: block;
  font-size: var(--reset-monospace-block-font-size);
}

/* Inline elements should be sized as a percentage of the font-size they inherit
from their parent block element. Generally this is needed only when the typeface
changes within a block. */

:--monospace-inline {
  display: inline-block;
  font-size: var(--reset-monospace-inline-font-size);
}

/* By default, have line heights precisely match the font size of the block. */

body {
  line-height: 1;

  & * {
    line-height: inherit;
  }
}

/* The text-rendering property is not part of any CSS specification - it is from
the SVG spec in fact - but it is supported by Gecko + WebKit browsers when added
to HTML documents. Web browsers must make trade-offs between speed of rendering,
legibility, and achieving geometric precision in typography.  The text-rendering
property is intended to give UI designers control over these trade-offs. */

html {
  text-rendering: optimizeLegibility;
}

/* For responsive layouts that scale down to fit the width of small screens, the
text-size-adjust property should be set to 100%.  This tells some mobiles to not
inflate the size of rendered text in an attempt to make it more readable.  It is
not a standard CSS property. */

html {
  text-size-adjust: 100%;
}

/* The default font color is applied to the document body and allowed to cascade
to all elements within the document - even <legend> and form controls that don't
normally inherit the color property. The color property is also inherited as the
default fill color for embedded SVGs (customizable via the fill attribute). */

body {
  color: var(--reset-text-color);

  & * {
    color: inherit;
  }
}

svg {
  fill: currentColor;
}

/* Bullets are removed from unordered lists - but not ordered ones because doing
so would make the "type" attribute obsolete. It is handy for controlling in HTML
the numbering format: <ol type="A">. The default position of bullets is moved to
the inside, which generally works better. */

ol,
ul {
  list-style-position: inside;
}

ul {
  list-style-type: none;
}

li {
  list-style: inherit;
}

/* Different web browsers design the horizontal rule (<hr>) element in different
ways. Here's a more consistent implementation. */

hr {
  border: 0;
  border-top: 1px solid var(--reset-hr-color);
  height: 0;
}

/* Text should not be wrapped within figures or preformatted blocks.  Horizontal
scrolling is preferred in this context, even on smaller screens, so the intended
presentation of the text is preserved. */

figure {
  overflow: auto;
}

/* Suppress text wrapping within <code> elements, unless it is in a preformatted
text block. */

code {
  white-space: nowrap;
}

pre {
  overflow: auto;
  white-space: pre;
  word-wrap: normal;

  & code {
    white-space: pre;
  }
}

/* Remove the dotted underline given to <abbr> and <dfn> elements. The values of
their title attributes are inaccessible via touch interfaces, so this visual cue
serves no purpose in that context. Remove the default italics seen on <dfn>s for
the same reason. The only useful differential styling here is the cursor. */

abbr,
dfn {
  text-decoration: none;

  &[title] {
    cursor: help;
  }
}

/* Generated quotes are removed from block-level and inline quotes. */

dfn {
  font-style: normal;
}

blockquote,
q {
  quotes: none;

  &::before,
  &::after {
    content: '';
  }
}

/* Remove the default italics of <cite>, remove the underline from <ins> and <u>
and remove the strikethrough from <del> and <s>. Also reset the <mark> element -
so it is not distinguishable from the surrounding text by default. The items are
thus purely semantic with their design determined exclusively by classes. */

cite {
  font-style: normal;
}

del,
ins {
  text-decoration: none;
}

s,
u {
  text-decoration: none;
}

mark {
  background: transparent;
  color: inherit;
}

/* The default presentation for superscript and subscript affects line-height in
all browsers. We'll use a different method to achieve a similar design, one that
does not affect line-height. */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Removing the size of the <small> element makes it a pure semantic element, as
it ought to be. The <address> element also has been redefined as a section node,
yet most browsers still treat it as a text node, italicizing its inner text - we
can fix that. */

small {
  font-size: 100%;
}

address {
  font-style: normal;
}

/* Generally it's more convenient if pseudo elements inherit the text-decoration
and vertical-align properties of their parents. */

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit;
}

/* Here's a better default presentation for selected text. */

::selection {
  background: var(--reset-selected-text-background-color);
  color: inherit;
  text-shadow: none;
}
